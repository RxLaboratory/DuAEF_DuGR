var commonSettings = def( DuESF.scriptSettings.data.common, {} );
var uiMode = def(commonSettings.uiMode, 0);

// ========= ISOLATE BUTTONS =========

var isolateGroup = DuScriptUI.group( ui.mainGroup);
isolateGroup.alignment = ['center','top'];

var exitButton = DuScriptUI.button(
    isolateGroup,
    "",
    DuScriptUI.Icon.CLOSE,
    DuScriptUI.String.DUGR_EXIT_ISOLATION_TIP
);

var isolateButton = DuScriptUI.checkBox(
    isolateGroup,
    DuScriptUI.String.ISOLATE,
    w16_isolate,
    DuScriptUI.String.DUGR_ISOLATE_TIP,
    undefined,
    undefined,
    'column'
);

if (uiMode < 1)
{
    var spacer = isolateGroup.add('group');
    spacer.spacing = 0;
    spacer.margins = 0;
    spacer.minimumSize = [5,-1];
}

var isolateTLButton = DuScriptUI.checkBox(
    isolateGroup,
    DuScriptUI.String.TIMELINE,
    w16_isolate_tl,
    DuScriptUI.String.DUGR_ISOLATE_TIMELINE_TIP,
    undefined,
    undefined,
    'column'
);

if (uiMode < 1)
{
    var spacer = isolateGroup.add('group');
    spacer.spacing = 0;
    spacer.margins = 0;
    spacer.minimumSize = [5,-1];
}

var isolateCompButton = DuScriptUI.checkBox(
    isolateGroup,
    DuScriptUI.String.COMPOSITION_SHORT,
    w16_isolate_comp,
    DuScriptUI.String.DUGR_ISOLATE_COMP_TIP,
    undefined,
    undefined,
    'column'
);

var pinButton = DuScriptUI.checkBox(
    isolateGroup,
    "",
    DuScriptUI.Icon.PIN,
    DuScriptUI.String.DUGR_STICKY_TIP,
    "",
    DuScriptUI.Icon.PINNED
);
pinButton.setChecked( def(DuESF.scriptSettings.data.interactiveMode, false ) );
exitButton.visible = !pinButton.checked;

pinButton.onClick = function()
{
    exitButton.visible = !pinButton.checked;
    DuESF.scriptSettings.data.interactiveMode = pinButton.checked;
    DuESF.scriptSettings.save();
}

exitButton.onClick = exit;

isolateButton.onClick = function()
{
    if (!pinButton.checked) isolateButton.setChecked(true);

    if (isolateButton.checked)
    {
        isolateTLButton.setChecked(false);
        isolateCompButton.setChecked(false);
    }

    if (isolateButton.checked) isolate();
    else exit(); 
}

isolateTLButton.onClick = function()
{
    if (!pinButton.checked) isolateTLButton.setChecked(true);

    if (isolateTLButton.checked)
    {
        isolateButton.setChecked(false);
        isolateCompButton.setChecked(false);
    }

    if (isolateTLButton.checked) isolateTL();
    else exit();
}

isolateCompButton.onClick = function()
{
    if (!pinButton.checked) isolateCompButton.setChecked(true);

    if (isolateCompButton.checked)
    {
        isolateButton.setChecked(false);
        isolateTLButton.setChecked(false);
    }

    if (isolateCompButton.checked) isolateComp();
    else exit();
}

//DuScriptUI.separator( ui.mainGroup );

// ========= TOGGLE BUTTONS ==========

var aeSwitchesBG = DuScriptUI.group( ui.mainGroup, 'row');
aeSwitchesBG.alignment = ['fill','top'];
DuScriptUI.setBackgroundColor( aeSwitchesBG, DuColor.Color.DARK_GREY)
var aeSwitchesGroup = DuScriptUI.group( aeSwitchesBG, 'column' );
aeSwitchesGroup.alignment = ['center','top'];
var aeSwitchesGroup1 = DuScriptUI.group( aeSwitchesGroup );
var enableAEButton = DuScriptUI.button(
    aeSwitchesGroup1,
    "",
    enabled,
    DuScriptUI.String.SHOW_HIDE_LAYERS_TIP
)
var audioAEButton = DuScriptUI.button(
    aeSwitchesGroup1,
    "",
    audioEnabled,
    DuScriptUI.String.TOGGLE_AUDIO
)
var soloAEButton = DuScriptUI.button(
    aeSwitchesGroup1,
    "",
    solo,
    DuScriptUI.String.SOLO_LAYERS
)
var lockAEButton = DuScriptUI.button(
    aeSwitchesGroup1,
    "",
    locked,
    DuScriptUI.String.LOCK_LAYERS
)
var shyAEButton = DuScriptUI.button(
    aeSwitchesGroup1,
    "",
    shy,
    DuScriptUI.String.SHY_LAYERS
)
var collapseTransformationAEButton = DuScriptUI.button(
    aeSwitchesGroup1,
    "",
    collapseTransformation,
    DuScriptUI.String.CONTINUOUS_RASTERIZATION
)
var guideAEButton = DuScriptUI.button(
    aeSwitchesGroup1,
    "",
    guide,
    DuScriptUI.String.GUIDE_LAYERS
)
var aeSwitchesGroup2 = DuScriptUI.group( aeSwitchesGroup );
var qualityAEButton = DuScriptUI.button(
    aeSwitchesGroup2,
    "",
    quality,
    DuScriptUI.String.SET_QUALITY
)
var effectsActiveAEButton = DuScriptUI.button(
    aeSwitchesGroup2,
    "",
    effectsActive,
    DuScriptUI.String.TOGGLE_EFFECTS
)
var frameBlendingAEButton = DuScriptUI.button(
    aeSwitchesGroup2,
    "",
    frameBlending,
    DuScriptUI.String.SET_FRAME_BLENDING
)
var motionBlurAEButton = DuScriptUI.button(
    aeSwitchesGroup2,
    "",
    motionBlur,
    DuScriptUI.String.TOGGLE_MOTION_BLUR
)
var adjustmentLayerAEButton = DuScriptUI.button(
    aeSwitchesGroup2,
    "",
    adjustmentLayer,
    DuScriptUI.String.TOGGLE_ADJUSTMENT_LAYER
)
var threeDLayerAEButton = DuScriptUI.button(
    aeSwitchesGroup2,
    "",
    threeDLayer,
    DuScriptUI.String.TOGGLE_3D_LAYER
)
var selectLayerAEButton = DuScriptUI.button(
    aeSwitchesGroup2,
    "",
    select,
    DuScriptUI.String.SELECT_LAYERS
)

enableAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.SHOW_HIDE_LAYERS_TIP );
    DuAE.toggleLayerControls();

    DuGR.toggleVisibility( getGroups(), invertButton.checked );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

audioAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.TOGGLE_AUDIO );

    DuGR.toggleSound( getGroups(), invertButton.checked );

    DuAE.endUndoGroup();
}

soloAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.SOLO_LAYERS );
    DuAE.toggleLayerControls();

    DuGR.toggleSolo( getGroups(), invertButton.checked );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

lockAEButton.onClick  = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.LOCK_LAYERS );

    DuGR.toggleLocked( getGroups(), invertButton.checked );

    DuAE.endUndoGroup();
}

shyAEButton.onClick  = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.SHY_LAYERS );

    DuGR.toggleShy( getGroups(), invertButton.checked );

    DuAE.endUndoGroup();
}

collapseTransformationAEButton.onClick  = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.CONTINUOUS_RASTERIZATION );
    DuAE.toggleLayerControls();

    var allowLockedLayers = def(DuESF.scriptSettings.data.allowLockedLayers, true);
    DuGR.toggleCollapseTransformation( getGroups(), invertButton.checked, undefined, allowLockedLayers );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

guideAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.GUIDE_LAYERS );
    DuAE.toggleLayerControls();


    var allowLockedLayers = def(DuESF.scriptSettings.data.allowLockedLayers, true);
    DuGR.toggleGuide( getGroups(), invertButton.checked, undefined, allowLockedLayers );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

qualityAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.SET_QUALITY );
    DuAE.toggleLayerControls();

    var allowLockedLayers = def(DuESF.scriptSettings.data.allowLockedLayers, true);
    DuGR.toggleQuality( getGroups(), invertButton.checked, undefined, allowLockedLayers );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

effectsActiveAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.TOGGLE_EFFECTS );
    DuAE.toggleLayerControls();

    var allowLockedLayers = def(DuESF.scriptSettings.data.allowLockedLayers, true);
    DuGR.toggleEffects( getGroups(), invertButton.checked, undefined, allowLockedLayers );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

frameBlendingAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.SET_FRAME_BLENDING );
    DuAE.toggleLayerControls();

    var allowLockedLayers = def(DuESF.scriptSettings.data.allowLockedLayers, true);
    DuGR.toggleFrameBlending( getGroups(), invertButton.checked, undefined, allowLockedLayers );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

motionBlurAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.TOGGLE_MOTION_BLUR );
    DuAE.toggleLayerControls();

    var allowLockedLayers = def(DuESF.scriptSettings.data.allowLockedLayers, true);
    DuGR.toggleMotionBlur( getGroups(), invertButton.checked, undefined, allowLockedLayers );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

adjustmentLayerAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.TOGGLE_ADJUSTMENT_LAYER );
    DuAE.toggleLayerControls();

    var allowLockedLayers = def(DuESF.scriptSettings.data.allowLockedLayers, true);
    DuGR.toggleAdjustment( getGroups(), invertButton.checked, undefined, allowLockedLayers );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

threeDLayerAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.TOGGLE_3D_LAYER );
    DuAE.toggleLayerControls();

    var allowLockedLayers = def(DuESF.scriptSettings.data.allowLockedLayers, true);
    DuGR.toggleThreeD( getGroups(), invertButton.checked, undefined, allowLockedLayers );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

selectLayerAEButton.onClick = function()
{
    DuAE.beginUndoGroup( DuScriptUI.String.SELECT_LAYERS );
    DuAE.toggleLayerControls();

    DuGR.select( getGroups(), invertButton.checked );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
}

// ========= PANELS ==========

//DuScriptUI.separator( ui.mainGroup );
var mainTabs = DuScriptUI.tabPanel( ui.mainGroup, 'column' );
mainTabs.buttonsGroup.alignment = ['center', 'top'];
var propTab = mainTabs.addTab( DuScriptUI.String.PROPERTIES, w16_prop_group, DuScriptUI.String.DUGR_SELECT_PROP_TIP );
var groupTab = mainTabs.addTab( DuScriptUI.String.GROUPS, w16_layer_group, DuScriptUI.String.SELECT_GROUPS );

var propList;
var groupList;

propTab.build = function (tab)
{
    #include "propPanel.jsxinc"
}

groupTab.build = function (tab)
{
    #include "groupPanel.jsxinc"
}

mainTabs.onChange = function()
{
    DuESF.scriptSettings.data.currentTab = mainTabs.index;
    DuESF.scriptSettings.save();
}

if (uiMode < 1)
{
    var spacer = mainTabs.buttonsGroup.add('group');
    spacer.spacing = 0;
    spacer.margins = 0;
    spacer.minimumSize = [5,-1];
}

var invertButton = DuScriptUI.checkBox(
    mainTabs.buttonsGroup,
    DuScriptUI.String.INVERT,
    w16_invert,
    DuScriptUI.String.DUGR_INVERT_TIP,
    DuScriptUI.String.INVERTED,
    w16_inverted,
    'column'
)

invertButton.alignment = ['left','fill'];
invertButton.onClick = refreshIsolation;

// =========== GENERAL METHODS ========

function getGroups()
{
    var groups = [];
    if (mainTabs.index == 0 && propList.selection)
    {
        for (var i = 0, n = propList.selection.length; i < n ; i++)
        {
            if (propList.selection[i].index == 0 && !invertButton.checked) return [];
            groups.push( propList.selection[i].groupName );
        }
    }
    else if (mainTabs.index == 1 && groupList.selection)
    {
        for (var i = 0, n = groupList.selection.length; i < n ; i++)
        {
            if (groupList.selection[i].index == 0 && !invertButton.checked) return [];
            groups.push( groupList.selection[i].groupName );
        }
    }
    return groups;
}

function refreshPanel()
{
    // Check isolation mode
    var isolationMode = DuGR.isolationMode();
    isolateButton.setChecked( isolationMode == DuGR.IsolationMode.BOTH );
    isolateTLButton.setChecked( isolationMode == DuGR.IsolationMode.TIMELINE );
    isolateCompButton.setChecked( isolationMode == DuGR.IsolationMode.COMP_PANEL );

    // Get group list
    if (groupList)
    {
        var groups = DuGR.listGroups();

        // Remove groups not in the list
        for (var i = groupList.items.length -1 ; i > 3; i-- )
        {
            var g = groupList.items[i].groupName;
            if (groups.indexOf(g) < 0) groupList.remove(i);
            else groups.removeAll(g);
        }
       
        // Add new groups
        groups.do(function( group )
        {
            if (group != DuGR.Group.IGNORED) groupList.add('item', group).groupName = group;
        } );
    }
}

function refreshIsolation()
{
    if (!pinButton.checked) return;
    if (isolateButton.checked) isolate();
    else if (isolateTLButton.checked) isolateTL();
    else if (isolateCompButton.checked) isolateComp();
}

function isolate()
{
    var stgs = DuESF.scriptSettings.data;

    if (DuESF.debug) $.hiresTimer;
    DuAE.beginUndoGroup( "Isolation" );
    DuAE.toggleLayerControls();

    var groups = getGroups();
    if (groups.length == 0)
    {
        exit();
        return;
    }

    DuGR.isolate(
        groups,
        invertButton.checked,
        undefined,
        stgs.warningFrame,
        DuGR.IsolationMode.BOTH,
        stgs.useWireframe,
        stgs.lockHidden
        );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
    if (DuESF.debug) alert($.hiresTimer / 1000000 + ' seconds');
}

function isolateTL()
{
    var stgs = DuESF.scriptSettings.data;

    if (DuESF.debug) $.hiresTimer;
    DuAE.beginUndoGroup( "Isolation" );
    DuAE.toggleLayerControls();

    DuGR.isolate(
        getGroups(),
        invertButton.checked,
        undefined,
        stgs.warningFrame,
        DuGR.IsolationMode.TIMELINE,
        stgs.useWireframe,
        stgs.lockHidden
        );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
    if (DuESF.debug) alert($.hiresTimer / 1000000 + ' seconds');
}

function isolateComp()
{
    var stgs = DuESF.scriptSettings.data;

    if (DuESF.debug) $.hiresTimer;
    DuAE.beginUndoGroup( "Isolation" );
    DuAE.toggleLayerControls();

    DuGR.isolate(
        getGroups(),
        invertButton.checked,
        undefined,
        stgs.warningFrame,
        DuGR.IsolationMode.COMP_PANEL,
        stgs.useWireframe,
        stgs.lockHidden
        );

    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
    if (DuESF.debug) alert($.hiresTimer / 1000000 + ' seconds');
}

function exit()
{
    if (DuESF.debug) $.hiresTimer;
    DuAE.beginUndoGroup( "Exit Isolation" );
    DuAE.toggleLayerControls();
    DuGR.exitIsolation();
    DuAE.toggleLayerControls();
    DuAE.endUndoGroup();
    if (DuESF.debug) alert($.hiresTimer / 1000000 + ' seconds');
}

DuScriptUI.addEvent( refreshPanel, 1000);

// ========== INIT ==============

var currentTab = def( DuESF.scriptSettings.data.currentTab, 0);
mainTabs.setCurrentIndex( currentTab );

refreshPanel();